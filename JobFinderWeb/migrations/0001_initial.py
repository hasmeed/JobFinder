# Generated by Django 2.1 on 2018-09-15 12:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('IsDeleted', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('applicationstatus', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('IsDeleted', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('companyname', models.CharField(blank=True, max_length=120, null=True)),
                ('headline', models.CharField(blank=True, max_length=120, null=True)),
                ('shortdescription', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=120, null=True)),
                ('founded', models.DateField(blank=True, null=True)),
                ('no_of_employees', models.CharField(blank=True, max_length=120, null=True)),
                ('companydetails', models.TextField(blank=True, null=True)),
                ('facebook', models.CharField(blank=True, max_length=120, null=True)),
                ('google', models.CharField(blank=True, max_length=120, null=True)),
                ('pintrest', models.CharField(blank=True, max_length=120, null=True)),
                ('twitter', models.CharField(blank=True, max_length=120, null=True)),
                ('git', models.CharField(blank=True, max_length=120, null=True)),
                ('instagram', models.CharField(blank=True, max_length=120, null=True)),
                ('youtube', models.CharField(blank=True, max_length=120, null=True)),
                ('dribbble', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('IsDeleted', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('degree', models.CharField(blank=True, max_length=120, null=True)),
                ('major', models.CharField(blank=True, max_length=120, null=True)),
                ('school', models.CharField(blank=True, max_length=120, null=True)),
                ('datefrom', models.DateField(blank=True, max_length=120, null=True)),
                ('dateto', models.DateField(blank=True, max_length=120, null=True)),
                ('shortdescription', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('IsDeleted', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('companyname', models.CharField(blank=True, max_length=120, null=True)),
                ('position', models.CharField(blank=True, max_length=120, null=True)),
                ('datefrom', models.DateField(blank=True, max_length=120, null=True)),
                ('dateto', models.DateField(blank=True, max_length=120, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('IsDeleted', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('jobtitle', models.CharField(blank=True, max_length=120, null=True)),
                ('shortdescription', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=120, null=True)),
                ('workinghour', models.CharField(blank=True, max_length=120, null=True)),
                ('yearsofexperience', models.CharField(blank=True, max_length=120, null=True)),
                ('salary', models.CharField(blank=True, max_length=120, null=True)),
                ('degree', models.CharField(blank=True, max_length=120, null=True)),
                ('timetype', models.CharField(blank=True, max_length=120, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('jobstatus', models.CharField(max_length=50)),
                ('Company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JobFinderWeb.Company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('IsDeleted', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('firstname', models.CharField(blank=True, max_length=50, null=True)),
                ('lastname', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('phonenumber', models.CharField(blank=True, max_length=120, null=True)),
                ('address', models.CharField(blank=True, max_length=120, null=True)),
                ('landline', models.CharField(blank=True, max_length=120, null=True)),
                ('skype', models.CharField(blank=True, max_length=120, null=True)),
                ('website', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Resumee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('IsDeleted', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('education', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JobFinderWeb.Education')),
                ('experience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JobFinderWeb.Experience')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Seeker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('IsDeleted', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('firstname', models.CharField(blank=True, max_length=50, null=True)),
                ('lastname', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('phonenumber', models.CharField(blank=True, max_length=120, null=True)),
                ('address', models.CharField(blank=True, max_length=120, null=True)),
                ('landline', models.CharField(blank=True, max_length=120, null=True)),
                ('skype', models.CharField(blank=True, max_length=120, null=True)),
                ('website', models.CharField(blank=True, max_length=120, null=True)),
                ('location', models.CharField(blank=True, max_length=120, null=True)),
                ('headline', models.CharField(blank=True, max_length=120, null=True)),
                ('age', models.CharField(blank=True, max_length=120, null=True)),
                ('salary', models.CharField(blank=True, max_length=120, null=True)),
                ('facebook', models.CharField(blank=True, max_length=120, null=True)),
                ('google', models.CharField(blank=True, max_length=120, null=True)),
                ('pintrest', models.CharField(blank=True, max_length=120, null=True)),
                ('twitter', models.CharField(blank=True, max_length=120, null=True)),
                ('git', models.CharField(blank=True, max_length=120, null=True)),
                ('instagram', models.CharField(blank=True, max_length=120, null=True)),
                ('youtube', models.CharField(blank=True, max_length=120, null=True)),
                ('dribbble', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('IsDeleted', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('skill', models.CharField(blank=True, max_length=120, null=True)),
                ('proficiency', models.CharField(blank=True, max_length=120, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JobFinderWeb.Seeker')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Identity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_provider', models.BooleanField(default=False)),
                ('is_seeker', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='seeker',
            name='identity',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='resumee',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JobFinderWeb.Seeker'),
        ),
        migrations.AddField(
            model_name='resumee',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JobFinderWeb.Skill'),
        ),
        migrations.AddField(
            model_name='provider',
            name='identity',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='experience',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JobFinderWeb.Seeker'),
        ),
        migrations.AddField(
            model_name='education',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JobFinderWeb.Seeker'),
        ),
        migrations.AddField(
            model_name='company',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JobFinderWeb.Provider'),
        ),
        migrations.AddField(
            model_name='application',
            name='candidate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JobFinderWeb.Seeker'),
        ),
        migrations.AddField(
            model_name='application',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JobFinderWeb.Company'),
        ),
        migrations.AddField(
            model_name='application',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JobFinderWeb.Job'),
        ),
    ]
